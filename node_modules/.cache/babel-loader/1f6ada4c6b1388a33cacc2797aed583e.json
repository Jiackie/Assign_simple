{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{getHists}from\"../redux/selectors\";var Balance=function Balance(_ref){var newhist=_ref.newhist;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",{className:\"no-margin\"},\"YOUR BALANCE\"),/*#__PURE__*/React.createElement(\"h1\",{className:\"no-margin\"},'$ '+newhist.map(function(item){return parseFloat(item.amount);}).reduce(function(acc,cur){return acc+cur;},0).toFixed(2)),/*#__PURE__*/React.createElement(\"div\",{className:\"inc_exp\"},/*#__PURE__*/React.createElement(\"div\",{className:\"income\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"no-margin\"},\"INCOME\"),/*#__PURE__*/React.createElement(\"p\",{className:\"income_value\"},'$ '+newhist.map(function(item){return parseFloat(item.amount);}).filter(function(amount){return amount>0;}).reduce(function(acc,cur){return acc+cur;},0).toFixed(2))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",{className:\"no-margin\"},\"EXPENSE\"),/*#__PURE__*/React.createElement(\"p\",{className:\"expense_value\"},'$ '+newhist.map(function(item){return parseFloat(item.amount);}).filter(function(amount){return amount<0;}).reduce(function(acc,cur){return acc+cur;},0).toFixed(2)))));};export default connect(function(state){return{newhist:getHists(state)};})(Balance);","map":{"version":3,"sources":["/Users/larky/Documents/Git_Project/Assign_simple/src/components/Balance.js"],"names":["React","connect","getHists","Balance","newhist","map","item","parseFloat","amount","reduce","acc","cur","toFixed","filter","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,KAAyB,oBAAzB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,UAAGC,CAAAA,OAAH,MAAGA,OAAH,oBACd,4CACE,0BAAI,SAAS,CAAC,WAAd,iBADF,cAIE,0BAAI,SAAS,CAAC,WAAd,EACG,KAAQA,OAAO,CAACC,GAAR,CAAY,SAAAC,IAAI,QAAIC,CAAAA,UAAU,CAACD,IAAI,CAACE,MAAN,CAAd,EAAhB,EAA6CC,MAA7C,CAAoD,SAACC,GAAD,CAAMC,GAAN,QAAcD,CAAAA,GAAG,CAAGC,GAApB,EAApD,CAA6E,CAA7E,CAAD,CAAkFC,OAAlF,CAA0F,CAA1F,CADV,CAJF,cAOE,2BAAK,SAAS,CAAC,SAAf,eACE,2BAAK,SAAS,CAAC,QAAf,eACE,0BAAI,SAAS,CAAC,WAAd,WADF,cAEE,yBAAG,SAAS,CAAC,cAAb,EACG,KAAOR,OAAO,CACZC,GADK,CACD,SAAAC,IAAI,QAAGC,CAAAA,UAAU,CAACD,IAAI,CAACE,MAAN,CAAb,EADH,EAELK,MAFK,CAEE,SAAAL,MAAM,QAAIA,CAAAA,MAAM,CAAG,CAAb,EAFR,EAGLC,MAHK,CAGE,SAACC,GAAD,CAAMC,GAAN,QAAcD,CAAAA,GAAG,CAAGC,GAApB,EAHF,CAG2B,CAH3B,CAAD,CAGgCC,OAHhC,CAGwC,CAHxC,CADT,CAFF,CADF,cAUE,4CACE,0BAAI,SAAS,CAAC,WAAd,YADF,cAEE,yBAAG,SAAS,CAAC,eAAb,EACG,KAAQR,OAAO,CACbC,GADM,CACF,SAAAC,IAAI,QAAIC,CAAAA,UAAU,CAACD,IAAI,CAACE,MAAN,CAAd,EADF,EAENK,MAFM,CAEC,SAAAL,MAAM,QAAIA,CAAAA,MAAM,CAAG,CAAb,EAFP,EAGNC,MAHM,CAGC,SAACC,GAAD,CAAMC,GAAN,QAAcD,CAAAA,GAAG,CAAGC,GAApB,EAHD,CAG0B,CAH1B,CAAD,CAG+BC,OAH/B,CAGuC,CAHvC,CADV,CAFF,CAVF,CAPF,CADc,EAAhB,CA+BA,cAAeX,CAAAA,OAAO,CAAC,SAAAa,KAAK,QAAK,CAAEV,OAAO,CAAGF,QAAQ,CAACY,KAAD,CAApB,CAAL,EAAN,CAAP,CAAkDX,OAAlD,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getHists } from \"../redux/selectors\";\n\nconst Balance = ({ newhist }) => (\n  <div>\n    <h4 className=\"no-margin\">\n      YOUR BALANCE\n    </h4>\n    <h1 className=\"no-margin\">\n      {'$ ' + (newhist.map(item => parseFloat(item.amount)).reduce((acc, cur) => acc + cur, 0)).toFixed(2)}\n    </h1>\n    <div className=\"inc_exp\">\n      <div className=\"income\">\n        <h4 className=\"no-margin\">INCOME</h4>\n        <p className=\"income_value\">\n          {'$ ' +(newhist\n            .map(item =>parseFloat(item.amount))\n            .filter(amount => amount > 0)\n            .reduce((acc, cur) => acc + cur, 0)).toFixed(2)}\n        </p>\n      </div>\n      <div>\n        <h4 className=\"no-margin\">EXPENSE</h4>\n        <p className=\"expense_value\">\n          {'$ ' + (newhist\n            .map(item => parseFloat(item.amount))\n            .filter(amount => amount < 0)\n            .reduce((acc, cur) => acc + cur, 0)).toFixed(2)}\n        </p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default connect(state => ({ newhist : getHists(state) }))(Balance);"]},"metadata":{},"sourceType":"module"}