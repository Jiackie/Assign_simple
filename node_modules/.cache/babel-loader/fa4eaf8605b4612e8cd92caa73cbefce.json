{"ast":null,"code":"const initialState = {\n  allIds: [],\n  byIds: {}\n};\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ADD_NEW\":\n      {\n        const {\n          id,\n          text,\n          amount\n        } = action.playload;\n        return { ...state,\n          allIds: [...state.allIds, id],\n          byIds: { ...state.byIds,\n            [id]: {\n              text,\n              amount\n            }\n          }\n        };\n      }\n\n    case \"DELET_NEW\":\n      {\n        const {\n          id\n        } = action.playload;\n        return {\n          allIds: state.allIds.filter(ids => ids !== id),\n          byIds: Object.keys(state.byIds).filter(key => parseInt(key) !== id).reduce((obj, key) => {\n            return { ...obj,\n              [key]: state.byIds[key]\n            };\n          }, {})\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/larky/Documents/Git_Project/Assign_simple/src/redux/reducers/newHistory.js"],"names":["initialState","allIds","byIds","reducer","state","action","type","id","text","amount","playload","filter","ids","Object","keys","key","parseInt","reduce","obj"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGJ,YAAzB,EAAuCK,MAAvC,EAA+C;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AAAgB;AACd,cAAM;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,IAAN;AAAYC,UAAAA;AAAZ,YAAuBJ,MAAM,CAACK,QAApC;AACA,eAAO,EACL,GAAGN,KADE;AAELH,UAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBM,EAAlB,CAFH;AAGLL,UAAAA,KAAK,EAAE,EACL,GAAGE,KAAK,CAACF,KADJ;AAEL,aAACK,EAAD,GAAO;AACLC,cAAAA,IADK;AAELC,cAAAA;AAFK;AAFF;AAHF,SAAP;AAWD;;AAED,SAAK,WAAL;AAAkB;AAChB,cAAM;AAAEF,UAAAA;AAAF,YAASF,MAAM,CAACK,QAAtB;AACA,eAAO;AACLT,UAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaU,MAAb,CAAqBC,GAAG,IAAIA,GAAG,KAAKL,EAApC,CADH;AAELL,UAAAA,KAAK,EAAEW,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACF,KAAlB,EACJS,MADI,CACGI,GAAG,IAAIC,QAAQ,CAACD,GAAD,CAAR,KAAkBR,EAD5B,EAEJU,MAFI,CAEG,CAACC,GAAD,EAAMH,GAAN,KAAc;AACpB,mBAAO,EAAC,GAAGG,GAAJ;AAAS,eAACH,GAAD,GAAQX,KAAK,CAACF,KAAN,CAAYa,GAAZ;AAAjB,aAAP;AACD,WAJI,EAIF,EAJE;AAFF,SAAP;AAQD;;AAED;AACE,aAAOX,KAAP;AA7BJ;AA+BD","sourcesContent":["const initialState = {\n  allIds: [],\n  byIds: {}\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ADD_NEW\": {\n      const { id, text, amount } = action.playload;\n      return {\n        ...state,\n        allIds: [...state.allIds, id],\n        byIds: {\n          ...state.byIds,\n          [id] : {\n            text,\n            amount\n          }\n        }\n      };\n    }\n\n    case \"DELET_NEW\": {\n      const { id } = action.playload;\n      return {\n        allIds: state.allIds.filter( ids => ids !== id),\n        byIds: Object.keys(state.byIds)\n          .filter(key => parseInt(key) !== id)\n          .reduce((obj, key) => {\n            return {...obj, [key] : state.byIds[key]};\n          }, {})\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}