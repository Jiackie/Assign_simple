{"ast":null,"code":"const initialState = {\n  allIds: [0],\n  byIds: {\n    0: {\n      text: 'lialia',\n      amount: 12\n    }\n  }\n};\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ADD_NEW\":\n      {\n        const {\n          id,\n          text,\n          amount\n        } = action.playload;\n        return { ...state,\n          allIds: [...state.allIds, id],\n          byIds: { ...state.byIds,\n            [id]: {\n              text,\n              amount\n            }\n          }\n        };\n      }\n\n    case \"DELET_NEW\":\n      {\n        const {\n          id\n        } = action.playload;\n        return {\n          allIds: state.allIds.filter(ids => ids !== id),\n          byIds: Object.keys(state.byIds).filter(key => parseInt(key) !== id).reduce((obj, key) => {\n            return { ...obj,\n              [key]: state.byIds[key]\n            };\n          }, {})\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/larky/Documents/Git_Project/Assign_simple/expense-react/src/redux/reducers/newHistory.js"],"names":["initialState","allIds","byIds","text","amount","reducer","state","action","type","id","playload","filter","ids","Object","keys","key","parseInt","reduce","obj"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CAAC,CAAD,CADW;AAEnBC,EAAAA,KAAK,EAAE;AAAE,OAAI;AAACC,MAAAA,IAAI,EAAC,QAAN;AAAiBC,MAAAA,MAAM,EAAE;AAAzB;AAAN;AAFY,CAArB;AAKA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGN,YAAzB,EAAuCO,MAAvC,EAA+C;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AAAgB;AACd,cAAM;AAAEC,UAAAA,EAAF;AAAMN,UAAAA,IAAN;AAAYC,UAAAA;AAAZ,YAAuBG,MAAM,CAACG,QAApC;AACA,eAAO,EACL,GAAGJ,KADE;AAELL,UAAAA,MAAM,EAAE,CAAC,GAAGK,KAAK,CAACL,MAAV,EAAkBQ,EAAlB,CAFH;AAGLP,UAAAA,KAAK,EAAE,EACL,GAAGI,KAAK,CAACJ,KADJ;AAEL,aAACO,EAAD,GAAO;AACLN,cAAAA,IADK;AAELC,cAAAA;AAFK;AAFF;AAHF,SAAP;AAWD;;AAED,SAAK,WAAL;AAAkB;AAChB,cAAM;AAAEK,UAAAA;AAAF,YAASF,MAAM,CAACG,QAAtB;AACA,eAAO;AACLT,UAAAA,MAAM,EAAEK,KAAK,CAACL,MAAN,CAAaU,MAAb,CAAqBC,GAAG,IAAIA,GAAG,KAAKH,EAApC,CADH;AAELP,UAAAA,KAAK,EAAEW,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACJ,KAAlB,EACJS,MADI,CACGI,GAAG,IAAIC,QAAQ,CAACD,GAAD,CAAR,KAAkBN,EAD5B,EAEJQ,MAFI,CAEG,CAACC,GAAD,EAAMH,GAAN,KAAc;AACpB,mBAAO,EAAC,GAAGG,GAAJ;AAAS,eAACH,GAAD,GAAQT,KAAK,CAACJ,KAAN,CAAYa,GAAZ;AAAjB,aAAP;AACD,WAJI,EAIF,EAJE;AAFF,SAAP;AAQD;;AAED;AACE,aAAOT,KAAP;AA7BJ;AA+BD","sourcesContent":["const initialState = {\n  allIds: [0],\n  byIds: { 0 : {text:'lialia' , amount: 12}}\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ADD_NEW\": {\n      const { id, text, amount } = action.playload;\n      return {\n        ...state,\n        allIds: [...state.allIds, id],\n        byIds: {\n          ...state.byIds,\n          [id] : {\n            text,\n            amount\n          }\n        }\n      };\n    }\n\n    case \"DELET_NEW\": {\n      const { id } = action.playload;\n      return {\n        allIds: state.allIds.filter( ids => ids !== id),\n        byIds: Object.keys(state.byIds)\n          .filter(key => parseInt(key) !== id)\n          .reduce((obj, key) => {\n            return {...obj, [key] : state.byIds[key]};\n          }, {})\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}